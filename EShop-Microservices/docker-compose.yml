services:
    catalogdb:
        image: postgres

    basketdb:
        image: postgres

    distributedcache:
        image: redis

    orderdb:
        image: mcr.microsoft.com/mssql/server
    
    messagebroker:
        image: rabbitmq:3-management

    catalog.api:
      image: ${DOCKER_REGISTRY-}catalogapi
      build:
        context: C:\Users\josem\Desktop\Repositories\Microservices-E-Commerce-App\EShop-Microservices\src\Services\Catalog\Catalog.API
        dockerfile: Dockerfile

    basket.api:
      image: ${DOCKER_REGISTRY-}basketapi
      build:
        context: C:\Users\josem\Desktop\Repositories\Microservices-E-Commerce-App\EShop-Microservices\src\Services\Basket\Basket.API
        dockerfile: Dockerfile

    discount.grpc:
      image: ${DOCKER_REGISTRY-}discountgrpc
      build:
        context: C:\Users\josem\Desktop\Repositories\Microservices-E-Commerce-App\EShop-Microservices\src\Services\Discount\Discount.gRPC
        dockerfile: Dockerfile

    ordering.api:
      image: ${DOCKER_REGISTRY-}orderingapi
      build:
        context: C:\Users\josem\Desktop\Repositories\Microservices-E-Commerce-App\EShop-Microservices\src\Services\Ordering\Ordering.API
        dockerfile: Dockerfile

    yarpapigateway:
      image: ${DOCKER_REGISTRY-}yarpapigateway
      build:
        context: C:\Users\josem\Desktop\Repositories\Microservices-E-Commerce-App\EShop-Microservices\src\APIGateway\YARPAPIGateway
        dockerfile: Dockerfile

    shopping.web:
        image: ${DOCKER_REGISTRY-}shoppingweb
        build:
            context: C:\Users\josem\Desktop\Repositories\Microservices-E-Commerce-App\EShop-Microservices\src\WebApp\Shopping.Web
            dockerfile: Dockerfile

volumes:
    postgres_catalog:
    postgres_basket:
    